extends ../layout
block head
  include ../datatables_css
  link(rel='stylesheet', href='//cdnjs.cloudflare.com/ajax/libs/prettify/r298/prettify.min.css')

block content
  .container
    .page-header
      h1 Current Event Status
    .container
      .dropdown 
        a(href='#silencemenu', id="dLabel", class="dropdown-toggle" data-toggle='dropdown').dropdown-toggle Unsilenced
         b(class='caret')
        ul.dropdown-menu(role='menu', aria-labelledby='dropwdownMenu')
          li
            a(href='#', tabindex='-1') Silenced
          li 
            a(href='#', tabindex='-1') Unsilenced
          li 
            a(href='#', tabindex='-1') All
    .container
      table(id='table_events').table.table-condensed.table-hover
        thead
          tr
            th Severity
            th Issued
            th Client
            th Check
            th Flapping
            th Count
            th.visible-lg Output
        tbody
block footer
  include ../datatables_js
  script(src='//cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.1.0/bootbox.min.js')
  script(src='//cdnjs.cloudflare.com/ajax/libs/prettify/r298/prettify.min.js')
  script(src='/javascripts/sensu-helper.js')
  script(type='text/javascript').
    $(document).ready(function() {
      oTable = $('#table_events').dataTable( {
        "fnRowCallback": function( nRow, aData, iDisplayIndex, iDisplayIndedFull ) {
          jQuery('td:eq(0)', nRow).parent('tr').addClass('datatable-row');
          switch (aData['status']) {
            case 2:
              jQuery('td:eq(0)', nRow).parent('tr').addClass('danger');
              break;
            case 1:
              jQuery('td:eq(0)', nRow).parent('tr').addClass('warning');
              break;
            case 0:
              jQuery('td:eq(0)', nRow).parent('tr').addClass('success');
              break;
            default:
              jQuery('td:eq(0)', nRow).parent('tr').addClass('active');
              break;
          }
        },
        "sDom": "<'row'<'span6'l><'span6'f>r>t<'row'<'span6'i><'span6'p>>",
        "sPaginationType": "bootstrap",
        "sAjaxSource": '/api/v1/sensu/events/filtered',
        "iDisplayLength": 10,
        "bStateSave": true,
        "bDeferRender": true,
        "bSortClasses": false,
        "aoColumns": [
          { 
            "mData": "status",
            "sWidth": "50px",
            "mRender": function (status) {
              switch(status) {
                case 2:
                  return "Critical"
                  break;
                case 1:
                  return "Warning"
                  break;
                case 0:
                  return "OK"
                  break;
                default: 
                  return "Unknown"
                  break;
              }
            },
          }, {
            "mData": "issued",
            "sWidth": "80px"
          }, {
            "mData": "client",
            "sWidth": "140px",
            "mRender": function (client, type, row) {
              return renderButton(client, 'false') + '<a href="/ubersmith/devices/deviceid/'+row['dev'] + '">' + client.replace('.contegix.mgmt', '') + '</a>';
            }
          }, {
            "mData": "check",
            "mData": "client",
            "sWidth": "220px",
            "mRender": function(client, type, row) {
              return renderButton(row['client'], row['check']) + row['check'];
            },
          }, {
            "mData": "flapping",
            "sWidth": "40px"
          }, {
            "mData": "occurrences",
            "sWidth": "40px"
          }, {
            "mData": "output",
            "mRender": function (output, type, row) {
              var dispOutput = output.slice(0,75).replace(/["']/g, "");
              var txtBoxText = encodeURI(JSON.stringify(row, null, 2));
              return "<a onclick=\"displayTextAlert('" + txtBoxText + "');\">" + dispOutput + "</a>";

            }
          }],
        "aaSorting": [[1,'desc']],
        "oLanguage": {
          "sLengthMenu": "_MENU_ records per page"
        }
      });
      var show = 'Unsilenced';
      $.fn.dataTableExt.afnFiltering.push(
        //Filter by dropdown selection on table draw
        function( oSettings, aData, iDataIndex) {
          var row = oSettings.aoData[iDataIndex]._aData
          , silenced = row.silenced;

          if(show === 'All') {
            return true;
          } else if (show === 'Unsilenced') {
            return (silenced === 0);
          } else if (show === 'Silenced') {
            return (silenced === 1);
          } else {
            return true;
          }
      });
      $(".dropdown-menu li a").click(function() {
        //Callback for dropdown, set show variable, change name, and redraw the table.
        show = $(this).text();
        $('#dLabel').html(show + '<span class="caret"</span>');
        oTable.fnDraw();
      });
    });
